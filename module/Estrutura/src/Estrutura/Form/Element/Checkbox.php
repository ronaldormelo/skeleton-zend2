<?phpnamespace Estrutura\Form\Element;use Zend\Form\Element;class Checkbox extends Element\MultiCheckbox {    /**     *      * @param type $options     * @throws \Exception     */    public function setOptions($options) {        parent::setOptions($options);        if (!isset($this->options['service'])) {            throw new \Exception('O atributo service é obrigatório na opções do Elemento ' . $this->getName() . ' do Tipo Checkbox.', E_USER_ERROR);        }        if (!isset($this->options['chave'])) {            $this->options['chave'] = 'id';        }        if (!isset($this->options['valor'])) {            $this->options['valor'] = 'nome';        }        if (!isset($this->options['metodo'])) {            $this->options['metodo'] = 'fetchAll';        }        if (!isset($this->options['params'])) {            $this->options['params'] = array();        }        $this->buscarValores($this->options['service'], $this->options['chave'], $this->options['valor'], $this->options['metodo'], $this->options['params']);    }    /**     *      * @param type $service     * @param type $chave     * @param type $valor     * @param type $metodo     * @param type $params     */    protected function buscarValores($service, $chave, $valor, $metodo, $params) {        $cache = \Zend\Cache\StorageFactory::factory(array(                    'adapter' => array(                        'name' => 'filesystem',                        'options' => array(                            // tempo de validade do cache                            'ttl' => 7200,                            // adicionando o diretorio data/cache para salvar os caches.                            'cacheDir' => './data/cache'                        ),                    ),                    'plugins' => array(                        'exception_handler' => array('throw_exceptions' => false),                        'Serializer'                    )        ));        /*         * verificando se existe o cache da lista de produtos         * o segundo parâmetro retorna true se existir cache ou false se não existir         */        $nomeCache = 'checkbox' . str_replace('\\', '', get_class($service)) . $metodo . implode('', $params);        $arrValores = $cache->getItem($nomeCache, $success);        if (!$success) {            $rs = call_user_func_array([$service, $metodo], [$params]);            $arrValores = [];            if (!$rs) {                $rs = [];            }            foreach ($rs as $item) {                $arrValores[$item->{'get' . $chave}()] = $item->{'get' . $valor}();            }            $cache->addItem($nomeCache, $arrValores);        }        $this->setValueOptions($arrValores);    }}